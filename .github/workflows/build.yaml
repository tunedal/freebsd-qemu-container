on:
  push:
    branches: ['main', 'ci']
    tags: ['v[0-9]*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine image tags
        id: determine-tags
        run: |
          tags=()

          case "$GITHUB_REF_TYPE" in
          branch )
            tags+=("$GITHUB_REF_NAME")
            ;;
          tag )
            version="${GITHUB_REF_NAME/#v/}"
            tags+=("$version")
            echo "Git version tag: $version"

            readarray -t versions < \
              <(git ls-remote --tags origin | \
                awk '/tags\/v[0-9]/ {sub("refs/tags/v", "", $2); print $2}' | \
                sort -V)

            ver="$version"
            while test -n "$ver"; do
                ver="$(echo "$ver"|sed -r 's/\.?[^.]+$//')"
                prefix="${ver:+$ver.}"
                tag="${ver:-latest}"
                latest="$(printf '%s\n' "${versions[@]}" \
                    | awk -v p="$prefix" 'index($0, p) == 1' \
                    | sort -V \
                    | tail -1)"
                echo
                echo "Prefix: $prefix"
                echo "Image tag: $tag"
                echo "Latest Git version: $latest"

                if test "$latest" = "$version"; then
                  echo "Updating image tag."
                  tags+=("$tag")
                fi
            done
            echo
            ;;
          esac

          echo "Image tags: ${tags[@]}"
          echo IMAGE_TAGS="${tags[@]}" >>"$GITHUB_OUTPUT"

      # Until GitHub adds the runner user to the kvm group, this is
      # more or less the official solution, except we're changing the
      # owner from root to runner instead of giving all users access.
      # https://github.com/actions/runner-images/issues/183
      # https://github.com/actions/runner-images/issues/8542
      - name: Grab ownership of /dev/kvm
        run: |
          ls -l /dev/kvm
          id
          test "$(id -un)" = runner || exit 1
          echo 'KERNEL=="kvm", OWNER="runner", GROUP="kvm", MODE="0660",' \
               'OPTIONS+="static_node=kvm"' \
            | sudo tee /etc/udev/rules.d/99-kvm-for-runner.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Poke at registries 1
        run: |
          docker image ls -a
          echo
          podman image ls -a

      - name: Build base container image
        id: build-base-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.determine-tags.outputs.IMAGE_TAGS }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
          context: base
          containerfiles: |
            base/Containerfile
          extra-args: |
            --device /dev/kvm
            --iidfile base-image-id.txt

      - name: Poke at registries
        id: poke
        env:
          IMG: ${{ steps.build-base-image.outputs.image }}
          IMG_WITH_TAG: ${{ steps.build-base-image.outputs.image-with-tag }}
        run: |
          docker image ls -a --digests
          echo
          podman image ls -a --digests
          echo
          BASE_IMAGE_ID="$(cat base-image-id.txt)"
          BASE_IMAGE_DIGEST="$(podman inspect --format '{{.Digest}}')"
          BASE_IMAGE="$IMG@$BASE_IMAGE_DIGEST"
          echo "Image ID: $BASE_IMAGE_ID"
          echo "Image digest: $BASE_IMAGE_DIGEST"
          echo "Image: $BASE_IMAGE"
          echo "BASE_IMAGE_ID=$BASE_IMAGE_ID" >>"$GITHUB_OUTPUT"
          echo "BASE_IMAGE_DIGEST=$BASE_IMAGE_DIGEST >>"$GITHUB_OUTPUT"
          echo "BASE_IMAGE=$BASE_IMAGE >>"$GITHUB_OUTPUT"
          echo "BASE_IMAGE=$BASE_IMAGE >>"$GITHUB_ENV"
          podman image push "$BASE_IMAGE_ID" docker-daemon:"$IMG_WITH_TAG"
          echo
          docker image ls -a --digests

      - name: Run it!
        run: |
          echo "$BASE_IMAGE"
          podman run "$BASE_IMAGE"

      # - name: Build Python container image
      #   id: build-python-image
      #   uses: redhat-actions/buildah-build@v2
      #   with:
      #     image: ${{ env.IMAGE_NAME }}-python
      #     tags: ${{ steps.determine-tags.outputs.IMAGE_TAGS }}
      #     labels: |
      #       org.opencontainers.image.revision=${{ github.sha }}
      #     context: python
      #     containerfiles: |
      #       python/Containerfile
      #     build-args: |
      #       base=${{ steps.build-base-image.outputs.image-with-tag }}
      #       extra_qemu_args=-enable-kvm
      #     extra-args: |
      #       --device /dev/kvm

      # - name: Log in to the GitHub Container registry
      #   uses: redhat-actions/podman-login@v1
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Push base image to GitHub container registry
      #   id: push-base-to-ghcr
      #   uses: redhat-actions/push-to-registry@v2
      #   with:
      #     image: ${{ steps.build-base-image.outputs.image }}
      #     tags: ${{ steps.build-base-image.outputs.tags }}
      #     registry: ${{ env.REGISTRY }}

      # - name: Push Python image to GitHub container registry
      #   id: push-python-to-ghcr
      #   uses: redhat-actions/push-to-registry@v2
      #   with:
      #     image: ${{ steps.build-python-image.outputs.image }}
      #     tags: ${{ steps.build-python-image.outputs.tags }}
      #     registry: ${{ env.REGISTRY }}
